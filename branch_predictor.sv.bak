import lc3b_types::*;

module branch_predictor
(	
	input logic opcode,
	input logic pc_offset_sign,
	input logic take_jump,
	input lc3b_opcode wb_opcode,
	input logic wb_predict_taken,
	
	output logic flush,
	output logic predict_taken
);

// predictor - predicts next instruction
always_comb
begin
	predict_taken = 1'b0;

	if (opcode == op_br)
	begin
		if(pc_offset_sign)	// backwards -> predict taken
			predict_taken = 1'b1;
	end
end

// checker - fixes prediction mistakes
always_comb
begin
	flush = 1'b0;

	if (wb_opcode == op_br && wb_predict_taken != take_jump)
	begin
		flush = 1'b1;
	end
end

endmodule : branch_predictor